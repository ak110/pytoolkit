[metadata]
name = pytoolkit
version = attr: pytoolkit.__version__
description = pytoolkit: Personal Python package
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/ak110/pytoolkit
author = aki.
author_email = mark@aur.ll.to
license = MIT
license_file = LICENSE
classifiers =
    License :: OSI Approved :: MIT License

[options]
packages = find:
install_requires =
    albumentations
    numba
    pandas
    scikit-learn
entry_points = file: entry_points.cfg
zip_safe = False

[options.extras_require]
tensorflow = tensorflow>=2.2.0
tensorflow-cpu = tensorflow-cpu>=2.2.0
tensorflow-gpu = tensorflow-gpu>=2.2.0

[tool:isort]
skip = __init__.py
known_first_party = pytoolkit
multi_line_output = 3
include_trailing_comma = True

[tool:pytest]
addopts = --showlocals -p no:cacheprovider
filterwarnings =
    ignore:Using or importing the ABCs from 'collections' instead of from 'collections.abc':DeprecationWarning
    ignore:Overriding method 'to_cpu'.:DeprecationWarning
    ignore:Overriding method 'to_gpu'.:DeprecationWarning
markers =
    gpu: for avoid warning in chainercv
norecursedirs = __pycache__ .ipynb_checkpoints .mypy_cache .git docs

[flake8]
max-line-length = 128
extend-ignore = E203
exclude =
    __pycache__,
    .ipynb_checkpoints,
    .mypy_cache,
    __init__.py

[mypy]
allow_redefinition = True
check_untyped_defs = True
ignore_missing_imports = True
strict_optional = True
strict_equality = True
warn_no_return = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True
show_error_codes = True

[files]
package-data = pytoolkit = pytoolkit/py.typed
