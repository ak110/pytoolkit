[tool.poetry]
name = "pytoolkit"
version = "0.1.0"
description = "pytoolkit: Personal Python package"
license = "MIT"
authors = ["aki. <mark@aur.ll.to>"]
readme = "README.md"
homepage = "https://github.com/ak110/pytoolkit"
repository = "https://github.com/ak110/pytoolkit.git"
documentation = "https://ak110-pytoolkit.readthedocs.io/"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.8"
albumentations = "*"
numba = "*"
pandas = "*"
scikit-learn = "*"
better-exceptions = {version = "*", optional = true}
catboost = {version = "*", optional = true}
category_encoders = {version = "*", optional = true}
chainercv = {version = "*", optional = true}
efficientnet = {version = "*", optional = true}
h5py = {version = "*", optional = true}
horovod = {version = "*", optional = true}
ipython = {version = "*", optional = true}
keras2onnx = {version = "*", optional = true}
lightgbm = {version = "*", optional = true}
matplotlib = {version = "*", optional = true}
mpi4py = {version = "*", optional = true}
nbformat = {version = "*", optional = true}
onnxmltools = {version = "*", optional = true}
optuna = {version = "*", optional = true}
pydot = {version = "*", optional = true}
python-dotenv = {version = "*", optional = true}
requests = {version = "*", optional = true}
tensorflow = {version = "~2.3", optional = true}
tensorflow-cpu = {version = "~2.3", optional = true}
tf2onnx = {version = "^*", optional = true}
tqdm = {version = "*", optional = true}
xgboost = {version = "*", optional = true}

[tool.poetry.extras]
tensorflow = ["tensorflow"]
tensorflow-cpu = ["tensorflow-cpu"]
tests = [
    "better-exceptions",
    "category_encoders",
    "chainercv",
    "efficientnet",
    "image-classifiers",
    "keras2onnx",
    "lightgbm",
    "nbformat",
    "onnxmltools",
    "pydot",
    "python-dotenv",
    "tf2onnx",
    "tqdm",
]

[tool.poetry.dev-dependencies]
black = "~20.8b1"
flake8 = "*"
flake8-bugbear = "*"
mypy = "*"
pylint = "*"
pytest = "*"
isort = "*"

[tool.poetry.scripts]
tk-benchmark = "pytoolkit.bin.benchmark:main"
tk-convert-model = "pytoolkit.bin.convertmodel:main"
tk-plot-log = "pytoolkit.bin.plotlog:main"
tk-py2nb = "pytoolkit.bin.py2nb:main"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
